version: '${DockerVersion}'

services:
  rabbitmq:
    container_name: rabbitmq
    restart: on-failure
    image: rabbitmq:3.12.3-management-alpine
    ports:
      - "${RabbitMQServer_OutPORT}:${RabbitMQServerPort}"
      - "${RabbitMQManagement_OutPORT}:${RabbitMQManagementPort}"
    volumes:
      - "./rabbitmq.conf.d:/etc/rabbitmq/conf.d"

  bookingapi:
    container_name: bookingapi
    restart: on-failure
    build:
      context: ./src/BookingApi
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${Environment}
      - ASPNETCORE_URLS=http://+:80
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=${RabbitMQServerPort}
      - RABBITMQ_FLIGHT_EXCHANGE=${RABBITMQ_FLIGHT_EXCHANGE}
      - RABBITMQ_FLIGHT_QUEUENAME=${RABBITMQ_FLIGHT_QUEUENAME}
      - RABBITMQ_FLIGHT_ROUTINGKEY=${RABBITMQ_FLIGHT_ROUTINGKEY}
      - RABBITMQ_BAGAGE_EXCHANGE=${RABBITMQ_BAGAGE_EXCHANGE}
      - RABBITMQ_BORDINGPASS_EXCHANGE=${RABBITMQ_BORDINGPASS_EXCHANGE}
      - DEV_SETUP=${DEV_SETUP}
    volumes:
      - bookingapi:/src
    ports:
      - "${bookingapi_OutPORT}:${bookingapi_PORT}"

  postgres:
    container_name: postgres
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./db/db_seeder.sh:/x-db_seeder.sh
      - ./db/db_initializer.sh:/docker-entrypoint-initdb.d/10-init.sh
    environment:
        POSTGRES_PASSWORD: postgres
        POSTGRES_USER: postgres
        APP_DB_USER: ${APP_DB_USER}
        APP_DB_PASS: ${APP_DB_PASS}
        APP_DB_NAME: ${APP_DB_NAME}
  
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - postgres

  frontend:
    container_name: frontend
    restart: on-failure
    build:
      context: ./src/Frontend
      dockerfile: Dockerfile
    ports:
      - "${frontend_outPORT}:80"
    environment:
      - API_HOST="http://127.0.0.1:5012"

volumes:
  bookingapi:
  enricher:
  postgres:
    name: ${POSTGRES_VOLUME}
  adminer:
  rabbitmq:
  
